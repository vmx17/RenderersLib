#pragma once
#include "BoxRenderer.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.

namespace winrt::Renderers::implementation
{
    struct BoxRenderer : BoxRendererT<BoxRenderer>
    {
        //BoxRenderer() = default;
        BoxRenderer() { DefaultStyleKey(winrt::box_value(L"Renderers.BoxRenderer")); }
        static winrt::Microsoft::UI::Xaml::DependencyProperty Param0Property() { return m_param0Property; }
        static void Param0Property(winrt::Microsoft::UI::Xaml::DependencyProperty const& value){ m_param0Property = value; };
        int32_t Param0(){ return winrt::unbox_value<int32_t>(GetValue(m_param0Property)); }
        void Param0(int32_t value){ SetValue(m_param0Property, winrt::box_value(value)); }
        static void OnParam0Changed(Microsoft::UI::Xaml::DependencyObject const&, Microsoft::UI::Xaml::DependencyPropertyChangedEventArgs const&);

        static winrt::Microsoft::UI::Xaml::DependencyProperty Param1Property() { return m_param1Property; }
        static void Param1Property(winrt::Microsoft::UI::Xaml::DependencyProperty const& value){ m_param1Property = value; }
        int32_t Param1(){ return winrt::unbox_value<int32_t>(GetValue(m_param1Property)); }
        void Param1(int32_t value){ SetValue(m_param1Property, winrt::box_value(value)); }
        static void OnParam1Changed(Microsoft::UI::Xaml::DependencyObject const&, Microsoft::UI::Xaml::DependencyPropertyChangedEventArgs const&);
    private:
        static winrt::Microsoft::UI::Xaml::DependencyProperty m_param0Property;
        static winrt::Microsoft::UI::Xaml::DependencyProperty m_param1Property;
    };
}
namespace winrt::Renderers::factory_implementation
{
    struct BoxRenderer : BoxRendererT<BoxRenderer, implementation::BoxRenderer>
    {
    };
}
